- content_for :title_header do
  %h1
    = t("layouts.admin.admin")
    = "-"
    = t("admin.communities.transactions.transactions")

= render :partial => "admin/left_hand_navigation", :locals => { :links => admin_links_for(@current_community) }

.left-navi-section
  %h2= t("admin.communities.transactions.transactions", community_name: community.name(I18n.locale))

  - if feature_enabled?(:export_transactions_as_csv)
    #export-as-csv.right= link_to(" " + t("admin.communities.transactions.export_all_as_csv"), {per_page: 99999, format: :csv}, {class: icon_class("download")})

  %span#admin_transactions_count= page_entries_info(conversations, :model => "Transaction")

  %table#admin_transactions
    %thead
      %tr
        %th= render partial: "layouts/sort_link", locals: { column: "listing", direction: sort_link_direction("listing"), title: t("admin.communities.transactions.headers.listing") }
        %th=t("admin.communities.transactions.headers.status")
        %th=t("admin.communities.transactions.headers.sum")
        %th= render partial: "layouts/sort_link", locals: { column: "started", direction: sort_link_direction("started"), title: t("admin.communities.transactions.headers.started") }
        %th= render partial: "layouts/sort_link", locals: { column: "last_activity", direction: sort_link_direction("last_activity"), title: t("admin.communities.transactions.headers.last_activity") }
        %th=t("admin.communities.transactions.headers.initiated_by")
        %th=t("admin.communities.transactions.headers.other_party")
        %th
          Refund deposit


    %tbody
      - conversations.each do |conversation|
        - conversation_model = Conversation.find(conversation[:id])
        %tr
          - listing_title = conversation[:listing_title] || t("admin.communities.transactions.not_available")
          %td=Maybe(conversation[:listing]).map { |listing| link_to_unless(listing[:deleted], listing_title, conversation[:listing_url]) }.or_else(listing_title)
          %td
            = link_to person_transaction_path(person_id: @current_user.id, id: conversation[:id]) do
              = t("admin.communities.transactions.status.#{conversation[:status]}")
          %td=conversation[:payment_total] ? humanized_money_with_symbol(conversation[:payment_total]) : ""
          %td=l(conversation[:created_at], format: :short_date)
          %td=l(conversation[:last_activity_at], format: :short_date)
          %td=Maybe(conversation[:starter]).map { |p| link_to_unless(p[:is_deleted], p[:display_name], p[:url]) }.or_else("")
          %td=Maybe(conversation[:author]).map { |p| link_to_unless(p[:is_deleted], p[:display_name], p[:url]) }.or_else("")
          %td
            - deposit_refund = get_admin_refund_action(conversation_model.transaction)

            - unless deposit_refund.nil?
              $#{get_admin_refund_action(conversation_model.transaction)}

              - if conversation_model.transaction.deposit_refunded_at.nil?
                = form_tag ("/transactions/#{conversation_model.transaction.id}/refund_deposit") do
                  = submit_tag "refund", class: "button"
              - else
                Deposit refunded at:
                = conversation_model.transaction.deposit_refunded_at

  .row
    .col-12
      = will_paginate conversations
