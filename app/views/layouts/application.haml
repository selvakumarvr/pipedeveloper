= render :partial => 'layouts/head'

%body

  %noscript
    .noscript-padding
      -# Noscript content will be positioned here

  = render :partial => 'layouts/global-header'

  - if display_expiration_notice?
    = render partial: "layouts/expiration_notice",
        :locals => {external_plan_service_login_url: admin_plan_path}

  - content_for(:page_content) do
    %section.marketplace-lander
      - with_big_cover_photo do
        .coverimage
          %figure.marketplace-cover.fluidratio
        .wrapper
          .lander-content-container
            .lander-content.marketplace-lander-content
              = yield :title_header
      - with_small_cover_photo do
        .coverimage
          %figure.marketplace-cover-small.fluidratio
          .coverimage-fade{:class => yield(:coverfade_class)}
            %figure.marketplace-cover-small-fade.fluidratio
        .title-container
          .title-header-wrapper
            .marketplace-title-header
              = yield :title_header

    %article.page-content
      .wrapper
        = render :partial => "layouts/notifications"
        = yield

  -#
    This is not pretty, but works.
    On homepage, we want to wrap the whole page content (search bar and the "real" content) to a form, so that
    pressing send from either search bar of filter list will send all the form fields

  - if params[:controller] == "homepage" && params[:action] == "index"
    %form{method: "get", id: "homepage-filters"}
      - params.except("action", "controller", "q", "view", "utf8").each do |param, value|
        - unless param.match(/^filter_option/) || param.match(/^checkbox_filter_option/) || param.match(/^nf_/) || param.match(/^price_/)
          = hidden_field_tag param, value
      = hidden_field_tag "view", @view_type
      = content_for(:page_content)
  - else
    = content_for(:page_content)

  = render :partial => "layouts/google_analytics_script"

  -# Most of the JavaScript should be for performance reasons at the end of the body

  = content_for(:location_search)

  -# load Facebook SDK for the whole page
  = render :partial => "layouts/facebook_sdk"

  = javascript_include_tag 'application'

  - if @analytics_event
    :javascript
      report_analytics_event(#{@analytics_event});

  :javascript
    $(function() {
      FastClick.attach(document.body);
      $('input, textarea').placeholder();
    });

  -# Disable animations on tests
  - if Rails.env.test?
    :javascript
      $(function() {
        $.transit.enabled = false;
      });

  = content_for :extra_javascript

  :javascript
    $(document).ready(function() { initialize_defaults("#{I18n.locale}"); #{yield :javascript} });
    if (window != top) { top.location.replace(document.location); }
  = render :partial => "layouts/noscript"
